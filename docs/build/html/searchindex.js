Search.setIndex({"docnames": ["index", "intro", "modules", "neural_astar"], "filenames": ["index.rst", "intro.rst", "modules.rst", "neural_astar.rst"], "titles": ["Welcome to Neural Astar\u2019s documentation!", "Introduction", "neural_astar", "neural_astar package"], "terms": {"introduct": 0, "acknowledg": 0, "neural_astar": [0, 1], "packag": [0, 2], "submodul": [0, 2], "classic_astar": [0, 2], "modul": [0, 2], "custom_except": [0, 2], "custom_typ": [0, 2], "dataset_util": [0, 2], "differentiable_astar": [0, 2], "displai": [0, 2], "encod": [0, 2], "heurist": [0, 2], "training_modul": [0, 2], "index": [0, 3], "search": [0, 3], "page": 0, "i": [1, 3], "project": 1, "aim": 1, "improv": 1, "A": [1, 3], "algotithm": 1, "us": [1, 3], "deep": 1, "neural": [1, 3], "network": [1, 3], "astar": [2, 3], "forward": [2, 3], "node2d": [2, 3], "x": [2, 3], "y": [2, 3], "nodeastar": [2, 3], "cost": [2, 3], "g": [2, 3], "h": [2, 3], "node": [2, 3], "parent": [2, 3], "invalidproblemexcept": [2, 3], "notconfiguredexcept": [2, 3], "pathnotfoundexcept": [2, 3], "classicastarnod": [2, 3], "node2onehottensor": [2, 3], "nodelist2otensor": [2, 3], "onehottensor2node2d": [2, 3], "pathplaningdataitem": [2, 3], "goal": [2, 3], "map": [2, 3], "name": [2, 3], "path": [2, 3], "start": [2, 3], "pathplanningdataset": [2, 3], "create_one_item_dataset": [2, 3], "display_dataitem_by_idx": [2, 3], "prepare_dataset": [2, 3], "calculate_dist": [2, 3], "generate_random_point": [2, 3], "name_dataitem": [2, 3], "png_to_binary_matrix": [2, 3], "differentiableastar": [2, 3], "display": [2, 3], "add_cost_matrix": [2, 3], "add_goal": [2, 3], "add_matrix": [2, 3], "add_searched_nod": [2, 3], "add_solut": [2, 3], "add_start": [2, 3], "add_titl": [2, 3], "draw": [2, 3], "draw_full_astar_output": [2, 3], "prepare_plot": [2, 3], "matrix_check": [2, 3], "astarencod": [2, 3], "add_encod": [2, 3], "cnn": [2, 3], "channel": [2, 3], "chebyshev": [2, 3], "differentiable_euclidean": [2, 3], "euclidean": [2, 3], "neuralastar": [2, 3], "neuralastartrainingmodul": [2, 3], "configure_optim": [2, 3], "training_step": [2, 3], "content": 2, "class": 3, "callabl": 3, "float": 3, "costmap_weight": 3, "int": 3, "1": 3, "max_iter": 3, "50000000": 3, "heuristic_weight": 3, "5": 3, "base": 3, "lightningdatamodul": 3, "matrix_batch": 3, "tensor": 3, "start_batch": 3, "goal_batch": 3, "costmap_batch": 3, "none": 3, "tupl": 3, "pass": 3, "algorithm": 3, "paramet": 3, "torch": 3, "batch": 3, "input": 3, "matric": 3, "option": 3, "costmap": 3, "return": 3, "visit": 3, "type": 3, "alia": 3, "field": 3, "number": 3, "0": 3, "4": 3, "3": 3, "2": 3, "except": 3, "represent": 3, "classic": 3, "attribut": 3, "The": 3, "current": 3, "2d": 3, "from": 3, "total": 3, "coordin": 3, "repres": 3, "its": 3, "tensor_shap": 3, "convert": 3, "one": 3, "hot": 3, "shape": 3, "result": 3, "node_list": 3, "list": 3, "binari": 3, "correspond": 3, "map_folder_path": 3, "str": 3, "map_siz": 3, "problems_on_one_map": 3, "max_astar_iter": 3, "randomize_point": 3, "bool": 3, "fals": 3, "dataset": 3, "idx": 3, "specif": 3, "data": 3, "item": 3, "point1": 3, "point2": 3, "calcul": 3, "distanc": 3, "between": 3, "two": 3, "point": 3, "first": 3, "second": 3, "matrix": 3, "seed": 3, "gener": 3, "random": 3, "an": 3, "empti": 3, "environ": 3, "reproduc": 3, "default": 3, "contain": 3, "map_nam": 3, "item_numb": 3, "image_path": 3, "target_s": 3, "threshold": 3, "png": 3, "imag": 3, "target": 3, "size": 3, "convers": 3, "50000": 3, "lightningmodul": 3, "model": 3, "close": 3, "object": 3, "variou": 3, "compon": 3, "highlight": 3, "matrix_": 3, "np": 3, "ndarrai": 3, "cost_matrix_": 3, "addit": 3, "inform": 3, "has_cost_": 3, "flag": 3, "indic": 3, "avail": 3, "plot_ready_": 3, "plot": 3, "readi": 3, "plot_": 3, "plt": 3, "figur": 3, "ax": 3, "plot_title_": 3, "titl": 3, "arg": 3, "kwarg": 3, "add": 3, "main": 3, "search_histori": 3, "full": 3, "output": 3, "solut": 3, "func": 3, "decor": 3, "function": 3, "check": 3, "ha": 3, "show": 3, "ani": 3, "ad": 3, "input_dim": 3, "encoder_depth": 3, "32": 3, "64": 3, "128": 3, "256": 3, "p1": 3, "p2": 3, "goal_map": 3, "differenti": 3, "use_start_goal_data": 3, "incorpor": 3, "both": 3, "classic_astar_": 3, "differentiable_astar_": 3, "encoder_": 3, "use_start_goal_data_": 3, "whether": 3, "train": 3, "use_classic_astar": 3, "through": 3, "paths_batch": 3, "visited_nodes_batch": 3, "learning_r": 3, "01": 3, "neural_astar_": 3, "learning_rate_": 3, "learn": 3, "rate": 3, "optim": 3, "configur": 3, "train_batch": 3, "batch_idx": 3, "step": 3, "loss": 3}, "objects": {"": [[3, 0, 0, "-", "neural_astar"]], "neural_astar": [[3, 0, 0, "-", "classic_astar"], [3, 0, 0, "-", "custom_exceptions"], [3, 0, 0, "-", "custom_types"], [3, 0, 0, "-", "dataset_utils"], [3, 0, 0, "-", "differentiable_astar"], [3, 0, 0, "-", "display"], [3, 0, 0, "-", "encoders"], [3, 0, 0, "-", "heuristics"], [3, 0, 0, "-", "neural_astar"], [3, 0, 0, "-", "training_module"]], "neural_astar.classic_astar": [[3, 1, 1, "", "Astar"], [3, 1, 1, "", "Node2d"], [3, 1, 1, "", "NodeAstar"]], "neural_astar.classic_astar.Astar": [[3, 2, 1, "", "forward"]], "neural_astar.classic_astar.Node2d": [[3, 3, 1, "", "x"], [3, 3, 1, "", "y"]], "neural_astar.classic_astar.NodeAstar": [[3, 3, 1, "", "cost"], [3, 3, 1, "", "g"], [3, 3, 1, "", "h"], [3, 3, 1, "", "node"], [3, 3, 1, "", "parent"]], "neural_astar.custom_exceptions": [[3, 4, 1, "", "InvalidProblemException"], [3, 4, 1, "", "NotConfiguredException"], [3, 4, 1, "", "PathNotFoundException"]], "neural_astar.custom_types": [[3, 1, 1, "", "ClassicAstarNode"], [3, 1, 1, "", "Node2d"], [3, 5, 1, "", "node2onehottensor"], [3, 5, 1, "", "nodelist2otensor"], [3, 5, 1, "", "onehottensor2node2d"]], "neural_astar.custom_types.ClassicAstarNode": [[3, 3, 1, "", "cost"], [3, 3, 1, "", "g"], [3, 3, 1, "", "h"], [3, 3, 1, "", "node"], [3, 3, 1, "", "parent"]], "neural_astar.custom_types.Node2d": [[3, 3, 1, "", "x"], [3, 3, 1, "", "y"]], "neural_astar.dataset_utils": [[3, 1, 1, "", "PathPlaningDataItem"], [3, 1, 1, "", "PathPlanningDataset"], [3, 5, 1, "", "calculate_distance"], [3, 5, 1, "", "generate_random_points"], [3, 5, 1, "", "name_dataitem"], [3, 5, 1, "", "png_to_binary_matrix"]], "neural_astar.dataset_utils.PathPlaningDataItem": [[3, 3, 1, "", "goal"], [3, 3, 1, "", "map"], [3, 3, 1, "", "name"], [3, 3, 1, "", "path"], [3, 3, 1, "", "start"]], "neural_astar.dataset_utils.PathPlanningDataset": [[3, 2, 1, "", "create_one_item_dataset"], [3, 2, 1, "", "display_dataitem_by_idx"], [3, 2, 1, "", "prepare_dataset"]], "neural_astar.differentiable_astar": [[3, 1, 1, "", "DifferentiableAstar"]], "neural_astar.differentiable_astar.DifferentiableAstar": [[3, 2, 1, "", "forward"]], "neural_astar.display": [[3, 1, 1, "", "Displayer"], [3, 5, 1, "", "matrix_check"]], "neural_astar.display.Displayer": [[3, 2, 1, "", "add_cost_matrix"], [3, 2, 1, "", "add_goal"], [3, 2, 1, "", "add_matrix"], [3, 2, 1, "", "add_searched_nodes"], [3, 2, 1, "", "add_solution"], [3, 2, 1, "", "add_start"], [3, 2, 1, "", "add_title"], [3, 2, 1, "", "draw"], [3, 2, 1, "", "draw_full_astar_output"], [3, 2, 1, "", "prepare_plot"]], "neural_astar.encoders": [[3, 1, 1, "", "AstarEncoder"], [3, 1, 1, "", "CNN"]], "neural_astar.encoders.AstarEncoder": [[3, 2, 1, "", "add_encoder"], [3, 2, 1, "", "forward"]], "neural_astar.encoders.CNN": [[3, 3, 1, "", "CHANNELS"], [3, 2, 1, "", "forward"]], "neural_astar.heuristics": [[3, 5, 1, "", "chebyshev"], [3, 5, 1, "", "differentiable_euclidean"], [3, 5, 1, "", "euclidean"]], "neural_astar.neural_astar": [[3, 1, 1, "", "NeuralAstar"]], "neural_astar.neural_astar.NeuralAstar": [[3, 2, 1, "", "forward"]], "neural_astar.training_module": [[3, 1, 1, "", "NeuralAstarTrainingModule"]], "neural_astar.training_module.NeuralAstarTrainingModule": [[3, 2, 1, "", "configure_optimizers"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "training_step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "neural": 0, "astar": 0, "": 0, "document": 0, "content": [0, 3], "indic": 0, "tabl": 0, "introduct": 1, "acknowledg": 1, "neural_astar": [2, 3], "packag": 3, "submodul": 3, "classic_astar": 3, "modul": 3, "custom_except": 3, "custom_typ": 3, "dataset_util": 3, "differentiable_astar": 3, "displai": 3, "encod": 3, "heurist": 3, "training_modul": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to Neural Astar\u2019s documentation!": [[0, "welcome-to-neural-astar-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Introduction": [[1, "introduction"]], "Acknowledgements": [[1, "acknowledgements"]], "neural_astar": [[2, "neural-astar"]], "neural_astar package": [[3, "neural-astar-package"]], "Submodules": [[3, "submodules"]], "neural_astar.classic_astar module": [[3, "module-neural_astar.classic_astar"]], "neural_astar.custom_exceptions module": [[3, "module-neural_astar.custom_exceptions"]], "neural_astar.custom_types module": [[3, "module-neural_astar.custom_types"]], "neural_astar.dataset_utils module": [[3, "module-neural_astar.dataset_utils"]], "neural_astar.differentiable_astar module": [[3, "module-neural_astar.differentiable_astar"]], "neural_astar.display module": [[3, "module-neural_astar.display"]], "neural_astar.encoders module": [[3, "module-neural_astar.encoders"]], "neural_astar.heuristics module": [[3, "module-neural_astar.heuristics"]], "neural_astar.neural_astar module": [[3, "module-neural_astar.neural_astar"]], "neural_astar.training_module module": [[3, "module-neural_astar.training_module"]], "Module contents": [[3, "module-neural_astar"]]}, "indexentries": {"astar (class in neural_astar.classic_astar)": [[3, "neural_astar.classic_astar.Astar"]], "astarencoder (class in neural_astar.encoders)": [[3, "neural_astar.encoders.AstarEncoder"]], "channels (neural_astar.encoders.cnn attribute)": [[3, "neural_astar.encoders.CNN.CHANNELS"]], "cnn (class in neural_astar.encoders)": [[3, "neural_astar.encoders.CNN"]], "classicastarnode (class in neural_astar.custom_types)": [[3, "neural_astar.custom_types.ClassicAstarNode"]], "differentiableastar (class in neural_astar.differentiable_astar)": [[3, "neural_astar.differentiable_astar.DifferentiableAstar"]], "displayer (class in neural_astar.display)": [[3, "neural_astar.display.Displayer"]], "invalidproblemexception": [[3, "neural_astar.custom_exceptions.InvalidProblemException"]], "neuralastar (class in neural_astar.neural_astar)": [[3, "neural_astar.neural_astar.NeuralAstar"]], "neuralastartrainingmodule (class in neural_astar.training_module)": [[3, "neural_astar.training_module.NeuralAstarTrainingModule"]], "node2d (class in neural_astar.classic_astar)": [[3, "neural_astar.classic_astar.Node2d"]], "node2d (class in neural_astar.custom_types)": [[3, "neural_astar.custom_types.Node2d"]], "nodeastar (class in neural_astar.classic_astar)": [[3, "neural_astar.classic_astar.NodeAstar"]], "notconfiguredexception": [[3, "neural_astar.custom_exceptions.NotConfiguredException"]], "pathnotfoundexception": [[3, "neural_astar.custom_exceptions.PathNotFoundException"]], "pathplaningdataitem (class in neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem"]], "pathplanningdataset (class in neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.PathPlanningDataset"]], "add_cost_matrix() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_cost_matrix"]], "add_encoder() (neural_astar.encoders.astarencoder method)": [[3, "neural_astar.encoders.AstarEncoder.add_encoder"]], "add_goal() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_goal"]], "add_matrix() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_matrix"]], "add_searched_nodes() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_searched_nodes"]], "add_solution() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_solution"]], "add_start() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_start"]], "add_title() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.add_title"]], "calculate_distance() (in module neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.calculate_distance"]], "chebyshev() (in module neural_astar.heuristics)": [[3, "neural_astar.heuristics.chebyshev"]], "configure_optimizers() (neural_astar.training_module.neuralastartrainingmodule method)": [[3, "neural_astar.training_module.NeuralAstarTrainingModule.configure_optimizers"]], "cost (neural_astar.classic_astar.nodeastar attribute)": [[3, "neural_astar.classic_astar.NodeAstar.cost"]], "cost (neural_astar.custom_types.classicastarnode attribute)": [[3, "neural_astar.custom_types.ClassicAstarNode.cost"]], "create_one_item_dataset() (neural_astar.dataset_utils.pathplanningdataset method)": [[3, "neural_astar.dataset_utils.PathPlanningDataset.create_one_item_dataset"]], "differentiable_euclidean() (in module neural_astar.heuristics)": [[3, "neural_astar.heuristics.differentiable_euclidean"]], "display_dataitem_by_idx() (neural_astar.dataset_utils.pathplanningdataset method)": [[3, "neural_astar.dataset_utils.PathPlanningDataset.display_dataitem_by_idx"]], "draw() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.draw"]], "draw_full_astar_output() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.draw_full_astar_output"]], "euclidean() (in module neural_astar.heuristics)": [[3, "neural_astar.heuristics.euclidean"]], "forward() (neural_astar.classic_astar.astar method)": [[3, "neural_astar.classic_astar.Astar.forward"]], "forward() (neural_astar.differentiable_astar.differentiableastar method)": [[3, "neural_astar.differentiable_astar.DifferentiableAstar.forward"]], "forward() (neural_astar.encoders.astarencoder method)": [[3, "neural_astar.encoders.AstarEncoder.forward"]], "forward() (neural_astar.encoders.cnn method)": [[3, "neural_astar.encoders.CNN.forward"]], "forward() (neural_astar.neural_astar.neuralastar method)": [[3, "neural_astar.neural_astar.NeuralAstar.forward"]], "forward() (neural_astar.training_module.neuralastartrainingmodule method)": [[3, "neural_astar.training_module.NeuralAstarTrainingModule.forward"]], "g (neural_astar.classic_astar.nodeastar attribute)": [[3, "neural_astar.classic_astar.NodeAstar.g"]], "g (neural_astar.custom_types.classicastarnode attribute)": [[3, "neural_astar.custom_types.ClassicAstarNode.g"]], "generate_random_points() (in module neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.generate_random_points"]], "goal (neural_astar.dataset_utils.pathplaningdataitem attribute)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem.goal"]], "h (neural_astar.classic_astar.nodeastar attribute)": [[3, "neural_astar.classic_astar.NodeAstar.h"]], "h (neural_astar.custom_types.classicastarnode attribute)": [[3, "neural_astar.custom_types.ClassicAstarNode.h"]], "map (neural_astar.dataset_utils.pathplaningdataitem attribute)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem.map"]], "matrix_check() (in module neural_astar.display)": [[3, "neural_astar.display.matrix_check"]], "module": [[3, "module-neural_astar"], [3, "module-neural_astar.classic_astar"], [3, "module-neural_astar.custom_exceptions"], [3, "module-neural_astar.custom_types"], [3, "module-neural_astar.dataset_utils"], [3, "module-neural_astar.differentiable_astar"], [3, "module-neural_astar.display"], [3, "module-neural_astar.encoders"], [3, "module-neural_astar.heuristics"], [3, "module-neural_astar.neural_astar"], [3, "module-neural_astar.training_module"]], "name (neural_astar.dataset_utils.pathplaningdataitem attribute)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem.name"]], "name_dataitem() (in module neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.name_dataitem"]], "neural_astar": [[3, "module-neural_astar"]], "neural_astar.classic_astar": [[3, "module-neural_astar.classic_astar"]], "neural_astar.custom_exceptions": [[3, "module-neural_astar.custom_exceptions"]], "neural_astar.custom_types": [[3, "module-neural_astar.custom_types"]], "neural_astar.dataset_utils": [[3, "module-neural_astar.dataset_utils"]], "neural_astar.differentiable_astar": [[3, "module-neural_astar.differentiable_astar"]], "neural_astar.display": [[3, "module-neural_astar.display"]], "neural_astar.encoders": [[3, "module-neural_astar.encoders"]], "neural_astar.heuristics": [[3, "module-neural_astar.heuristics"]], "neural_astar.neural_astar": [[3, "module-neural_astar.neural_astar"]], "neural_astar.training_module": [[3, "module-neural_astar.training_module"]], "node (neural_astar.classic_astar.nodeastar attribute)": [[3, "neural_astar.classic_astar.NodeAstar.node"]], "node (neural_astar.custom_types.classicastarnode attribute)": [[3, "neural_astar.custom_types.ClassicAstarNode.node"]], "node2onehottensor() (in module neural_astar.custom_types)": [[3, "neural_astar.custom_types.node2onehottensor"]], "nodelist2otensor() (in module neural_astar.custom_types)": [[3, "neural_astar.custom_types.nodelist2otensor"]], "onehottensor2node2d() (in module neural_astar.custom_types)": [[3, "neural_astar.custom_types.onehottensor2node2d"]], "parent (neural_astar.classic_astar.nodeastar attribute)": [[3, "neural_astar.classic_astar.NodeAstar.parent"]], "parent (neural_astar.custom_types.classicastarnode attribute)": [[3, "neural_astar.custom_types.ClassicAstarNode.parent"]], "path (neural_astar.dataset_utils.pathplaningdataitem attribute)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem.path"]], "png_to_binary_matrix() (in module neural_astar.dataset_utils)": [[3, "neural_astar.dataset_utils.png_to_binary_matrix"]], "prepare_dataset() (neural_astar.dataset_utils.pathplanningdataset method)": [[3, "neural_astar.dataset_utils.PathPlanningDataset.prepare_dataset"]], "prepare_plot() (neural_astar.display.displayer method)": [[3, "neural_astar.display.Displayer.prepare_plot"]], "start (neural_astar.dataset_utils.pathplaningdataitem attribute)": [[3, "neural_astar.dataset_utils.PathPlaningDataItem.start"]], "training_step() (neural_astar.training_module.neuralastartrainingmodule method)": [[3, "neural_astar.training_module.NeuralAstarTrainingModule.training_step"]], "x (neural_astar.classic_astar.node2d attribute)": [[3, "neural_astar.classic_astar.Node2d.x"]], "x (neural_astar.custom_types.node2d attribute)": [[3, "neural_astar.custom_types.Node2d.x"]], "y (neural_astar.classic_astar.node2d attribute)": [[3, "neural_astar.classic_astar.Node2d.y"]], "y (neural_astar.custom_types.node2d attribute)": [[3, "neural_astar.custom_types.Node2d.y"]]}})